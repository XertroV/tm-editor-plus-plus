/// ! This file is generated from ../../../codegen/Mediatracker/BlockEntity.xtoml !
/// ! Do not edit this file manually !

class DGameCtnMediaBlockEntity_Key : RawBufferElem {
	DGameCtnMediaBlockEntity_Key(RawBufferElem@ el) {
		if (el.ElSize != SZ_MEDIABLOCKENTITY_KEY) throw("invalid size for DGameCtnMediaBlockEntity_Key");
		super(el.Ptr, el.ElSize);
	}
	DGameCtnMediaBlockEntity_Key(uint64 ptr) {
		super(ptr, SZ_MEDIABLOCKENTITY_KEY);
	}

	float get_StartTime() { return (this.GetFloat(0x0)); }
	uint get_Lights() { return (this.GetUint32(0x4)); }
	void set_Lights(uint value) { this.SetUint32(0x4, value); }
	vec3 get_TrailColor() { return (this.GetVec3(0x8)); }
	void set_TrailColor(vec3 value) { this.SetVec3(0x8, value); }
	float get_TrailIntensity() { return (this.GetFloat(0x14)); }
	void set_TrailIntensity(float value) { this.SetFloat(0x14, value); }
	float get_SelfIllumIntensity() { return (this.GetFloat(0x18)); }
	void set_SelfIllumIntensity(float value) { this.SetFloat(0x18, value); }
}


class DGameCtnMediaBlockEntity : RawBufferElem {
	DGameCtnMediaBlockEntity(RawBufferElem@ el) {
		if (el.ElSize != SZ_MEDIABLOCKENTITY) throw("invalid size for DGameCtnMediaBlockEntity");
		super(el.Ptr, el.ElSize);
	}
	DGameCtnMediaBlockEntity(uint64 ptr) {
		super(ptr, SZ_MEDIABLOCKENTITY);
	}
	DGameCtnMediaBlockEntity(CGameCtnMediaBlockEntity@ nod) {
		if (nod is null) throw("not a CGameCtnMediaBlockEntity");
		super(Dev_GetPointerForNod(nod), SZ_MEDIABLOCKENTITY);
	}
	CGameCtnMediaBlockEntity@ get_Nod() {
		return cast<CGameCtnMediaBlockEntity>(Dev_GetNodFromPointer(ptr));
	}

	CPlugEntRecordData@ get_EntRecordData() { return cast<CPlugEntRecordData>(this.GetNod(0x58)); }
	float get_StartOffset() { return (this.GetFloat(0x60)); }
	void set_StartOffset(float value) { this.SetFloat(0x60, value); }
	string get_GhostName() { return (this.GetString(0x68)); }
	uint get_RaceTime() { return (this.GetUint32(0x7C)); }
	void set_RaceTime(uint value) { this.SetUint32(0x7C, value); }
	bool get_ForceHue() { return (this.GetBool(0x88)); }
	void set_ForceHue(bool value) { this.SetBool(0x88, value); }
	CSystemPackDesc@ get_Skin() { return cast<CSystemPackDesc>(this.GetNod(0xB8)); }
	CSystemPackDesc@ get_Horn() { return cast<CSystemPackDesc>(this.GetNod(0xC0)); }
	string get_Trigram() { return (this.GetString(0x108)); }
	void set_Trigram(const string &in value) { this.SetString(0x108, value); }
	string get_RegionString() { return (this.GetString(0x118)); }
	DGameCtnMediaBlockEntity_Keys@ get_Keys() { return DGameCtnMediaBlockEntity_Keys(this.GetBuffer(0x140, SZ_MEDIABLOCKENTITY_KEY, false)); }
}

class DGameCtnMediaBlockEntity_Keys : RawBuffer {
	DGameCtnMediaBlockEntity_Keys(RawBuffer@ buf) {
		super(buf.Ptr, buf.ElSize, buf.StructBehindPtr);
	}
	DGameCtnMediaBlockEntity_Key@ GetKey(uint i) {
		return DGameCtnMediaBlockEntity_Key(this[i]);
	}
}

