/// ! This file is generated from ../../../codegen/Editor/SnapCamStruct.xtoml !
/// ! Do not edit this file manually !

// maybe up to 0x238 size, but not sure about more than 118
class DSnapCam : RawBufferElem {
	DSnapCam(RawBufferElem@ el) {
		if (el.ElSize != 0x120) throw("invalid size for DSnapCam");
		super(el.Ptr, el.ElSize);
	}
	DSnapCam(uint64 ptr) {
		super(ptr, 0x120);
	}

	uint get_u01() { return (this.GetUint32(0)); }
	void set_u01(uint value) { this.SetUint32(0, value); }
	CControlFrame@ get_FrameEditSnapCamera() { return cast<CControlFrame>(this.GetNod(0x8)); }
	CPlugBitmap@ get_Bitmap() { return cast<CPlugBitmap>(this.GetNod(0x10)); }
	iso4 get_CamLoc() { return (this.GetIso4(0xC0)); }
	void set_CamLoc(iso4 value) { this.SetIso4(0xC0, value); }
	vec3 get_CamPos() { return (this.GetVec3(0xE4)); }
	void set_CamPos(vec3 value) { this.SetVec3(0xE4, value); }
	// 0, 0
	// 0
	// increasing = cut off front -> back
	float get_Clip1() { return (this.GetFloat(0xFC)); }
	void set_Clip1(float value) { this.SetFloat(0xFC, value); }
	float get_FovH() { return (this.GetFloat(0x100)); }
	void set_FovH(float value) { this.SetFloat(0x100, value); }
	float get_FovV() { return (this.GetFloat(0x104)); }
	void set_FovV(float value) { this.SetFloat(0x104, value); }
	vec2 get_FovHV() { return (this.GetVec2(0x100)); }
	void set_FovHV(vec2 value) { this.SetVec2(0x100, value); }
	// decreasing = cut off back -> front
	float get_Clip2() { return (this.GetFloat(0x108)); }
	void set_Clip2(float value) { this.SetFloat(0x108, value); }
}


