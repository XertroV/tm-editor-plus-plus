/// ! This file is generated from ../../../codegen/Scene/NHmsForestVis_SMgr.xtoml !
/// ! Do not edit this file manually !

class DHmsForestVis_SMgr : RawBufferElem {
	DHmsForestVis_SMgr(RawBufferElem@ el) {
		if (el.ElSize != 0x1d8) throw("invalid size for DHmsForestVis_SMgr");
		super(el.Ptr, el.ElSize);
	}
	DHmsForestVis_SMgr(uint64 ptr) {
		super(ptr, 0x1d8);
	}

	// 0x198: buf of 2 byte things, updated when QP updated
	// 0x1A8: buf of 1 byte flags? 0 or 1, maybe for whether it's placed / drawn?
	// 0x1B8:
	// 0x1CC: uint frame counter
	// 0x1D0: CHmsZone
	uint get_FrameCount() { return (this.GetUint32(0x1cc)); }
	// 0x0: buf of ?
	// 0x10: buf of ?
	// 0x20: buf to all zeros mostly?
	// 0x30: buf of ?
	// 0x40: buf of ?
	// 0x50: buf of ?
	// 0x60: buf of ?
	// 0x70: buf of ?
	// 0x80: vec4 unknown
	// 0x88: material
	// vfx file
	// particle emitter
	// 0xA8: buf of floats? 50, 100, 50, 100, 50, 100...
	// 0xB8: buf of (visual indexed triangles, int(-1), bool? ) 0x10 wide
	// 0xC8: buf of (visual indexed triangles, int(-1), u16?, u16?) 0x10 wide
	// 0xD8: 0, 0, 0, 0
	// 0xE8: buf of CHmsItem
	// 0xF8: buf of FFFF
	// 0x108: buf of nat2?
	// 0x128 to 0x180: floats, 0 or 1 (mostly 1)
	// 0x188: buf of QuatPosFloat
	QuatPosFs@ get_TreeLocations() { return QuatPosFs(this.GetBuffer(0x188, 0x20, false)); }
}

class QuatPosFs : RawBuffer {
	QuatPosFs(RawBuffer@ buf) {
		super(buf.Ptr, buf.ElSize, buf.StructBehindPtr);
	}
	QuatPosF@ GetQuatPosF(uint i) {
		return QuatPosF(this[i]);
	}
}

class QuatPosF : RawBufferElem {
	QuatPosF(RawBufferElem@ el) {
		if (el.ElSize != 0x20) throw("invalid size for QuatPosF");
		super(el.Ptr, el.ElSize);
	}
	QuatPosF(uint64 ptr) {
		super(ptr, 0x20);
	}

	vec4 get_rotAsV4() { return (this.GetVec4(0x0)); }
	void set_rotAsV4(vec4 value) { this.SetVec4(0x0, value); }
	quat get_rotAsOpQuat() { return (this.GetQuat(0x0)); }
	void set_rotAsOpQuat(quat value) { this.SetQuat(0x0, value); }
	vec3 get_pos() { return (this.GetVec3(0x10)); }
	void set_pos(vec3 value) { this.SetVec3(0x10, value); }
	float get_f1c() { return (this.GetFloat(0x1c)); }
	void set_f1c(float value) { this.SetFloat(0x1c, value); }
}


