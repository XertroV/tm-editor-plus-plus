/// ! This file is generated from ../../../codegen/Scene/NSceneKinematicVis.xtoml !
/// ! Do not edit this file manually !

class D_NSceneKinematicVis_SMgr : RawBufferElem {
	D_NSceneKinematicVis_SMgr(RawBufferElem@ el) {
		if (el.ElSize != 0x78) throw("invalid size for D_NSceneKinematicVis_SMgr");
		super(el.Ptr, el.ElSize);
	}
	D_NSceneKinematicVis_SMgr(uint64 ptr) {
		super(ptr, 0x78);
	}

	// This is exposed normally, but has no properties
	D_NSceneKinematicVis_SConstraints@ get_Constraints() { return D_NSceneKinematicVis_SConstraints(this.GetBuffer(0x8, 0x58, false)); }
}

class D_NSceneKinematicVis_SConstraints : RawBuffer {
	D_NSceneKinematicVis_SConstraints(RawBuffer@ buf) {
		super(buf.Ptr, buf.ElSize, buf.StructBehindPtr);
	}
	D_NSceneKinematicVis_SConstraint@ GetSConstraint(uint i) {
		return D_NSceneKinematicVis_SConstraint(this[i]);
	}
}

class D_NSceneKinematicVis_SConstraint : RawBufferElem {
	D_NSceneKinematicVis_SConstraint(RawBufferElem@ el) {
		if (el.ElSize != 0x58) throw("invalid size for D_NSceneKinematicVis_SConstraint");
		super(el.Ptr, el.ElSize);
	}
	D_NSceneKinematicVis_SConstraint(uint64 ptr) {
		super(ptr, 0x58);
	}

	// 0x0: pointer to some struct with state
	// -> 0x0 pointer to NPlugDyna_SKinematicConstraint
	// > 0x8 quaternion stuff or maybe matrix
	// 0x4C: base position of the visible mesh (does not change collisions)
	vec3 get_Pos() { return (this.GetVec3(0x4C)); }
	void set_Pos(vec3 value) { this.SetVec3(0x4C, value); }
	float get_PosX() { return (this.GetFloat(0x4C)); }
	void set_PosX(float value) { this.SetFloat(0x4C, value); }
	float get_PosY() { return (this.GetFloat(0x50)); }
	void set_PosY(float value) { this.SetFloat(0x50, value); }
	float get_PosZ() { return (this.GetFloat(0x54)); }
	void set_PosZ(float value) { this.SetFloat(0x54, value); }
}


